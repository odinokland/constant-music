import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id 'multiloader-loader'
    id 'fabric-loom'
    id "com.modrinth.minotaur" version "2.+"
}
dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_minecraft}:${parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modImplementation("com.terraformersmc:modmenu:11.0.1")
}

loom {
    def aw = project(':common').file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName('Fabric Client')
            ideConfigGenerated(true)
            runDir('runs/client')
        }
        server {
            server()
            setConfigName('Fabric Server')
            ideConfigGenerated(true)
            runDir('runs/server')
        }
    }
}

modrinth {
    token = findProperty("modrinth_token") // Remember to have the MODRINTH_TOKEN environment variable set or else this will fail - just make sure it stays private!
    projectId = "constant-music" // This can be the project ID or the slug. Either will work!
    versionName = "[Fabric 1.21+] v${project.version}"
    uploadFile = remapJar // With Loom, this MUST be set to `remapJar` instead of `jar`!
    gameVersions = ['1.21'] // Must be an array, even with only one version
    loaders = ["fabric"] // Must also be an array - no need to specify this if you're using Loom or ForgeGradle
    syncBodyFrom = rootProject.file("README.md").text
    changelog = file('../changelog.md').text
    dependencies { // A special DSL for creating dependencies
        // scope.type
        // The scope can be `required`, `optional`, `incompatible`, or `embedded`
        // The type can either be `project` or `version`
        required.project "fabric-api" // Creates a new required dependency on Fabric API
        optional.project "cloth-config"
    }
}

// CurseForgeGradle
tasks.register('publishCurseforgeFabric', TaskPublishCurseForge) {

    apiToken = findProperty('curseforge_token')
    debugMode = false

    // The main file to upload
    def mainFile = upload(949032, remapJar)
    mainFile.releaseType = 'release'
    mainFile.changelog = file('../changelog.md')
    mainFile.changelogType = 'markdown'
    mainFile.addModLoader("Fabric")
    mainFile.displayName = "[Fabric 1.21+] v${project.version}"
    mainFile.addGameVersion('1.21')
    mainFile.addRequirement('fabric-api')
    mainFile.addOptional('modmenu')

    // The sources JAR
//    def sourcesFile = mainFile.withAdditionalFile(sourcesJar)
//    sourcesFile.changelog = file('../changelog.md')
//    sourcesFile.addRequirement('fabric-api')


    // The JavaDoc JAR
//    def javadocFile = mainFile.withAdditionalFile(javadocJar)
//    javadocFile.changelog = 'This is a test JavaDoc file!'
//    javadocFile.displayName = "JavaDoc - ${version}"
}

tasks.modrinth.dependsOn(tasks.modrinthSyncBody)