name: "Publish"

on:
    workflow_dispatch:
        inputs:
            mod_loaders:
                description: 'List of mod loaders to be published'
                required: true
                default: "['fabric', 'forge', 'neoforge']"
                type: string
            versions:
                description: 'List of versions to be published'
                required: true
                default: "['1.19.2','1.19.3','1.19.4','1.20.2','1.20.4','1.20.6','1.21.1','1.21.3','1.21.5','1.21.8']"
                type: string

jobs:
    build:
        name: "Build project"
        runs-on: ubuntu-latest
        timeout-minutes: 60

        steps:
            -   name: "Checkout repository"
                uses: actions/checkout@v4
                with:
                    fetch-depth: 1

            -   name: "Set up JDK"
                uses: actions/setup-java@v4
                with:
                    java-version: |
                        17
                        21
                    distribution: temurin

            -   name: "Setup gradle"
                uses: gradle/actions/setup-gradle@v4
                with:
                    cache-read-only: false
                    gradle-version: wrapper
                    add-job-summary: 'on-failure'


            -   name: "Run build (with heartbeat)"
                shell: bash
                run: |
                    ./gradlew build --info &
                    GRADLE_PID=$!
                    (while kill -0 $GRADLE_PID 2> /dev/null; do echo "Still building..."; sleep 60; done) &
                    WAITER_PID=$!
                    wait $GRADLE_PID
                    BUILD_RESULT=$?
                    kill $WAITER_PID
                    exit $BUILD_RESULT

    generate-publish-matrix:
        runs-on: ubuntu-latest
        name: Generate build matrix
        outputs:
            matrix: ${{ steps.set-matrix.outputs.matrix }}
        steps:
            -   name: "Checkout repository"
                uses: actions/checkout@v4
                with:
                    fetch-depth: 1

            -   name: "Generate matrix for the publish job"
                id: set-matrix
                run: ./.github/scripts/generate-publish-matrix.sh "${{ inputs.mod_loaders }}" "${{ inputs.versions }}" ${{ vars.CURSEFORGE_PROJECT_ID }} ${{ vars.MODRINTH_PROJECT_ID }}

    publish:
        runs-on: ubuntu-latest
        needs: [build, generate-publish-matrix]
        name: Publish ${{ matrix.mod_loader }} ${{ matrix.version }}
        timeout-minutes: 60
        strategy:
            max-parallel: 3
            fail-fast: false
            matrix: ${{ fromJson(needs.generate-publish-matrix.outputs.matrix) }}

        steps:
            -   name: "Checkout repository"
                uses: actions/checkout@v4
                with:
                    fetch-depth: 1

            -   name: "Parse gradle properties"
                id: gradle-properties
                run: ./.github/scripts/parse-gradle-properties.sh ${{ matrix.version }}

            -   name: "Parse changelog"
                run: ./.github/scripts/parse-changelog.sh ${{ steps.gradle-properties.outputs.MOD_VERSION }}

            -   name: "Create github release"
                continue-on-error: true
                uses: ncipollo/release-action@v1
                with:
                    skipIfReleaseExists: true
                    allowUpdates: true
                    omitNameDuringUpdate: true
                    omitBodyDuringUpdate: true
                    tag: mc${{ steps.gradle-properties.outputs.MINECRAFT_VERSION }}-${{ steps.gradle-properties.outputs.MOD_VERSION }}
                    name: ${{ steps.gradle-properties.outputs.MOD_NAME }} ${{ steps.gradle-properties.outputs.MOD_VERSION }} for Minecraft ${{ steps.gradle-properties.outputs.MINECRAFT_VERSION }}
                    bodyFile: RELEASE_CHANGELOG.md

            -   name: "Set up JDK"
                uses: actions/setup-java@v4
                with:
                    java-version: 21
                    distribution: temurin

            -   name: "Setup Gradle"
                uses: gradle/actions/setup-gradle@v4
                with:
                    cache-read-only: true
                    gradle-version: wrapper
                    add-job-summary: 'on-failure'

            -   name: "Switch active versions"
                run: ./gradlew "Set active project to ${{ matrix.version }}"

            -   name: "Run build"
                run: ./gradlew ${{ matrix.mod_loader }}:${{ matrix.version }}:build

            -   name: Publish ${{ matrix.mod_loader }}
                uses: Kir-Antipov/mc-publish@v3.3.0
                with:
                    github-token: ${{ secrets.GITHUB_TOKEN }}
                    github-tag: mc${{ steps.gradle-properties.outputs.MINECRAFT_VERSION }}-${{ steps.gradle-properties.outputs.MOD_VERSION }}
                    github-commitish: ${{ steps.gradle-properties.outputs.MINECRAFT_VERSION }}

                    curseforge-id: ${{ matrix.curseforge_project_id }}
                    curseforge-token: ${{ secrets.CURSEFORGE_RELEASE_TOKEN }}

                    modrinth-featured: true
                    modrinth-id: ${{ matrix.modrinth_project_id }}
                    modrinth-token: ${{ secrets.MODRINTH_RELEASE_TOKEN }}

                    name: ${{ steps.gradle-properties.outputs.MOD_NAME }} ${{ steps.gradle-properties.outputs.MOD_VERSION }}
                    version: ${{ matrix.mod_loader }}-${{ steps.gradle-properties.outputs.MOD_VERSION }}+mc${{ steps.gradle-properties.outputs.MINECRAFT_VERSION }}
                    loaders: ${{ join(matrix.supported_mod_loaders, ' ') }}
                    game-versions: |
                        >=${{ steps.gradle-properties.outputs.MIN_MINECRAFT_VERSION }} <=${{ steps.gradle-properties.outputs.MINECRAFT_VERSION }}
                    game-version-filter: releases
                    changelog-file: RELEASE_CHANGELOG.md
                    files: |
                        ${{ matrix.mod_loader }}/versions/${{ matrix.version }}/build/libs/!(*-@(dev|dev-shadow|sources|javadoc)).jar

                    retry-attempts: 6
                    retry-delay: 30000