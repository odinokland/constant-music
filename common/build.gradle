plugins {
    id 'multiloader-common'
    id 'org.spongepowered.gradle.vanilla' version '0.2.1-SNAPSHOT'
}

base {
    archivesName = "${mod_id}-common-${minecraft_version}"
}

minecraft {
    version(minecraft_version)
    def aw = file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWideners(aw)
    }
}

dependencies {
    compileOnly group: 'org.spongepowered', name: 'mixin', version: '0.8.5'
    // fabric and neoforge both bundle mixinextras, so it is safe to use it in common
    compileOnly group: 'io.github.llamalad7', name: 'mixinextras-common', version: '0.3.5'
    annotationProcessor group: 'io.github.llamalad7', name: 'mixinextras-common', version: '0.3.5'
}

configurations {
    commonJava {
        canBeResolved = false
        canBeConsumed = true
    }
    commonResources {
        canBeResolved = false
        canBeConsumed = true
    }
    commonGeneratedResources {
        canBeResolved = false
        canBeConsumed = true
    }
}

sourceSets {
    generated {
        resources {
            srcDir 'src/generated/resources'
        }
    }
}

artifacts {
    commonJava sourceSets.main.java.sourceDirectories.singleFile
    commonResources sourceSets.main.resources.sourceDirectories.singleFile
    commonGeneratedResources sourceSets.generated.resources.sourceDirectories.singleFile
}